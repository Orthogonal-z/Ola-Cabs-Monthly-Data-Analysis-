complete.cases(Data)
library(dplyr)
library(tidyverse)
#Created a new column
Data$Creditscore.700 <- 0
#Where ever credit score is more than 700 it will save it as 1 in cre.score.700 column
Data$Creditscore.700[Data$CreditScore > 700] <- 1
attach(Data)
table(Creditscore.700)
CrSc.700 <- Data %>%
select(Creditscore.700, Gender) %>%
filter(Creditscore.700 == 1)
View(CrSc.700)
library(tidyverse)
Data <- starwars
View(Data)
describe(Data)
library(psych)
describe(Data)
describe(Data)
summary(Data)
str(Data)
colnames(Data)
Data %>%
select(name, height, mass, hair, gender)
Data %>%
select(name, height, mass, hair_color, gender)
Data.2 <- Data %>%
select(name, height, mass, hair_color, gender)
View(Data.2)
vis_miss(Data.2, cluster = T)
library(ggplot2)
library(dplyr)
?gg_miss_span()
install.packages("VIM")
library(VIM)
summary(Data.2)
Data.3 <- kNN(data = Data.2, variable = c("mass", "height"), k = 3)
summary(Data.3)
View(Data.3)
Data <- read.csv("C:/Users/kapil/Desktop/My_Projects/Projects & DataSets/Bank.data.csv" ) , header = T)
Data <- read.csv("C:/Users/kapil/Desktop/My_Projects/Projects & DataSets/Bank.data.csv" )
View(Data)
colnames(Data)
library(tidyverse)
Data %>%
select("CustomerId", "Surname", "Gender", "HasCrCard")
Data.2 <- Data %>%
select("CustomerId", "Surname", "Gender", "HasCrCard")
View(Data.2)
Data.2 <- Data %>%
select("Gender", "HasCrCard")
Data.2 <- Data %>%
select("Gender", "HasCrCard") %>%
group_by("Gender")
Data.3 <- Data.2 <- Data %>%
select("Gender", "HasCrCard") %>%
group_by("Gender")
View (Data.3)
View(starwars)
Data <- rnorm(100, mean = 70, sd = 10)
Data
plot(Data)
hist(Data)
Data <- rnorm(100)
Data
hist(Data)
install.packages("skinr")
library(skinr)
install.packages("skimr")
library(skimr)
skim(Data)
library(hflights)
library(dplyr)
Data.2 <- hflights %>%
filter(hflights, months == 1, DayofMonth == 1)
Data.1 <- tbl_df(hflights)
Data.1 <- tibble::as_tibble(hflights)
Data.2 <- Data.1 %>%
filter(hflights, months == 1, DayofMonth == 1)
View(Data.1)
Data.2 <- Data.1 %>%
filter(hflights, months == 1, DayofMonth == 1, Year == 2011)
Data.2 <- Data.1 %>%
filter(Data.1, months == 1, DayofMonth == 1)
Data.2 <- Data.1 %>%
filter(Data.1, months == 1, DayofMonth == 1)
Data.2 <- Data.1 %>%
filter(months == 1, DayofMonth == 1)
filter(Data.1, months == 1, DayofMonth == 1)
filter(Data.1, months == 1 & DayofMonth == 1)
filter(Data.1, months == 1 , DayofMonth == 1)
filter(Data.1, Month == 1 , DayofMonth == 1)
select(Data.1, contains("HOU"))
View(Y)
Y <- select(Data.1, contains("HOU"))
View(Y)
Yv <- as.data.frame(Y)
View(Yv)
View(Data.1)
Y <- select(Data.1, contains("Time"))
Y
mutate(Data.1, Time = ArrTime - DepTime )
X <- mutate(Data.1, Time = ArrTime - DepTime )
View(X)
summarise_each(Data.1, funs(min(., na.rm = T), max(., na.rm = T)), matches(("Delay")))
Z <- summarise_each(Data.1, funs(min(., na.rm = T), max(., na.rm = T)), matches(("Delay")))
View(Z)
Zz <- summarise_each(Data.1, funs(mean(., na.rm = T)))
View(Zz)
x <- function(Data) {
sum_calc <- summary(Data)
return(sum_calc)
}
Data <- Titanic
x <- Data
x <- function(Data) {
sum_calc <- summary(Data)
return(sum_calc)
}
Data <- Titanic
x(Data)
x <- function(Data) {
sum_calc <- summary(Data)
return(list(sum_calc)
}
x <- function(Data) {
sum_calc <- summary(Data)
return(list(sum_calc))
}
Data <- Titanic
x(Data)
x <- function(Data) {
sum_calc <- summary(Data), mean(Data)
return(list(sum_calc))
}
x <- function(Data) {
sum_calc <- summary(Data), mean(Data), sd(Data)
return(list(sum_calc))
}
x <- function(Data) {
sum_calc <- mean(Data)
return(list(sum_calc))
}
Data <- Titanic
x(Data)
summary(Data)
Data <- as.data.frame(Titanic)
summary(Data)
x <- function(Data) {
sum_calc <- mean(Data)
return(list(sum_calc))
}
Data <- iris
x(Data)
Data <- as.data.frame(iris)
x(Data)
summary(Data)
x <- function(Data) {
sum_calc <- mean(Data)
return(sum_calc)
}
x(Data)
x <- function(Data) {
sum_calc <- str(Data)
return(sum_calc)
}
Data <- as.data.frame(iris)
x(Data)
library(dplyr)
Data.1 <- tibble::as_tibble(hflights)
View(Data.1)
library(hflights)
library(dplyr)
Data.1 <- tibble::as_tibble(hflights)
View(Data.1)
Zz <- summarise_each(Data.1, funs(mean(., na.rm = T)))
Zz
setwd("C:\Users\kapil\Desktop\GitHub\Ola Cabs Dataset Analytics")
setwd("C:/Users/kapil/Desktop/GitHub/Ola Cabs Dataset Analytics")
getwd()
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
#Import the dataset
april <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\April.csv")
may <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\May.csv")
june <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\June.csv")
july <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\July.csv")
august <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\August.csv")
september <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\september.csv")
#Combine the datasets in one dataframe
Data <- rbind(april,may,june,july,august,september)
library(skimr)
skim(data = Data)
head(Data)
View(Data)
summary(Data)
str(Data)
#Analysis
Data$Date.Time <- as.POSIXct(Data$Date.Time, format = "%m%d%Y %H:%M:%S")
View(Data)
Data$Date.Time <- format(as.POSIXct(Data$Date.Time, format = "%m%d%Y %H:%M:%S"), format = "%H:%M:%S")
View(Data)
View(Data)
Data$Time <- format(as.POSIXct(Data$Date.Time, format = "%m%d%Y %H:%M:%S"), format = "%H:%M:%S")
View(Data)
#Analysis
Data$Date.Time <- as.POSIXct(Data$Date.Time, format = "%m/%d/%Y %H:%M:%S")
View(Data)
Data$Time <- format(as.POSIXct(Data$Date.Time, format = "%m%d%Y %H:%M:%S"), format = "%H:%M:%S")
View(Data)
#Set the working directory
setwd("C:/Users/kapil/Desktop/GitHub/Ola Cabs Dataset Analytics")
getwd()
#Load Libraries
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
#Import the dataset
april <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\April.csv")
may <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\May.csv")
june <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\June.csv")
july <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\July.csv")
august <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\August.csv")
september <- read.csv("C:\\Users\\kapil\\Desktop\\GitHub\\Ola Cabs Dataset Analytics\\september.csv")
#Combine the datasets in one dataframe
Data <- rbind(april,may,june,july,august,september)
View(Data)
head(Data)
summary(Data)  ## There is no missing value in the dataset
str(Data)      ## A total of 4534327 rows and 4 columns, all are numeric except Base which is character
#Analysis
Data$Date.Time <- as.POSIXct(Data$Date.Time, format = "%m/%d/%Y %H:%M:%S")
View(Data)
View(Data)
View(Data)
View(Data)
View(Data)
View(Data)
View(Data)
View(Data)
View(august)
View(Data)
View(april)
Data$Time <- format(as.POSIXct(Data$Date.Time, format = "%m%d%Y %H:%M:%S"), format = "%H:%M:%S")
View(Data)
#
Data$Date.Time <- ymd_hms((Data$Date.Time))
View(Data)
Data$day <- format(day((Data$Date.Time)))
Data$month <- format(month((Data$Date.Time, label = T)))
Data$month <- format(month((Data$Date.Time), label = T))
Data$year <- format(year((Data$Date.Time))
Data$day_of_the_week <- format(wday(Data$Date.Time), label = T)
Data$day_of_the_week <- format(wday(Data$Date.Time), label = T)
Data$year <- format(year((Data$Date.Time))
View(Data)
View(Data)
Data$year <- format(year(Data$Date.Time))
View(Data)
class(Data$day_of_the_week)
#Convert hour/minute/seconds to factor
Data$hour <- factor(hour(hms(Data$Time)))
Data$minute <- factor(minute(hms(Data$Time)))
Data$seconds <- factor(seconds(hms(Data$Time)))
View(Data)
Data$seconds <- factor(second(hms(Data$Time)))
View(Data)
summary(Data$seconds)
head(Data)
head(Data)
Hour <- Data %>%
group_by(Data$hour) %>%
summarise(Total = n())
View(Hour)
datatable(Hour)
library(tidyr)
#Load Libraries
install.packages("DT")
library(DT)
install.packages("Scales")
install.packages("scales")
library(scales)
data.table::Hour()
library(ggplot2)
library(ggthemes)
#Visualising the Hour, we just created
ggplot(Hour, aes(Hour$`Data$hour`, Hour$Total)) +
geom_bar(start = "identity", fill = "black", col = "blue") +
ggtitle("Trips By Hours") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
ggplot(Hour, aes(Data$hour, Total)) +
geom_bar(start = "identity", fill = "black", col = "blue") +
ggtitle("Trips By Hours") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
ggplot(Hour, aes(hour, Total)) +
geom_bar(start = "identity", fill = "black", col = "blue") +
ggtitle("Trips By Hours") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
Hour <- Data %>%
group_by(hour) %>%
summarise(Total = n())
library(dplyr)
Hour <- Data %>%
group_by(hour) %>%
summarise(Total = n())
Hour
ggplot(Hour, aes(hour, Total)) +
geom_bar(start = "identity", fill = "black", col = "blue") +
ggtitle("Trips By Hours") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
rlang::last_error()
ggplot(Hour, aes(hour, Total)) +
geom_bar(start = "identity", fill = "black", col = "blue")
library(DT)
datatable(Hour)
hour_data <- Data %>%
group_by(hour) %>%
summarise(Total = n())
datatable(Hour)
ggplot(Hour, aes(hour, Total)) +
geom_bar(stat = "identity", fill = "black", col = "blue") +
ggtitle("Trips By Hours") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
month_hour_data <- Data %>%
group_by(month, hour) %>%
summarise(Total = n())
datatable(month_hour_data)
ggplot(hour_data, aes(hour, Total)) +
geom_bar(stat = "identity", fill = "black", col = "blue") +
ggtitle("Trips By Hours") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
ggplot(month_hour_data, aes(hour, Total, fill = month)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hours & Month") +
theme(legend.position = "none") +
scale_y_continuous(labels = comma)
ggplot(month_hour_data, aes(hour, Total, fill = month)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hours & Month") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(month_hour_data, aes(hour, Total, fill = month)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hours & Month") +
theme(legend.position = "right")
ggplot(month_hour_data, aes(hour, Total, fill = month)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hours & Month") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
septem_hour_data <- Data %>%
group_by(hour, month) %>%
filter(month == "september") %>%
summarise(Total = n())
datatable(septem_hour_data)
datatable(septem_hour_data)
septem_hour_data <- Data %>%
group_by(hour, month) %>%
filter(month == "September") %>%
summarise(Total = n())
datatable(septem_hour_data)
View(Data)
septem_hour_data <- Data %>%
group_by(hour, month) %>%
filter(month == "Sep") %>%
summarise(Total = n())
datatable(septem_hour_data)
septem_hour_data
ggplot(septem_hour_data, aes(hour, Total, fill = hour)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hours & Month for September") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
apr_hour_data <- Data %>%
group_by(hour, month) %>%
filter(month == "Apr") %>%
summarise(Total = n())
#Visualising the septem_hour_data, we just created
ggplot(apr_hour_data, aes(hour, Total, fill = hour)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hours & Month for April") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
day_data <- Data %>%
group_by(day) %>%
summarise(Total = n())
datatable(day_data)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "green", col = "black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "C7D0D7", col = "black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "#C7D0D7", col = "black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "#d55534") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
#Visualising the day_data, we just created
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "#black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "#black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(day_data, aes(day, Total, fill = hour)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "black") +
ggtitle("Trips by Day") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
monthly_data <- Data %>%
group_by(month) %>%
summarise(Total = n())
datatable(monthly_data)
ggplot(day_data, aes(month, Total, fill = month)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "black") +
ggtitle("Trips by Month") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(monthly_data, aes(month, Total, fill = month)) +
geom_bar(stat = "identity", fill = "#0D97ac", col = "black") +
ggtitle("Trips by Month") +
theme(legend.position = "right") +
scale_y_continuous(labels = comma)
ggplot(Data, aes(Base)) +
geom_bar(fill = "red") +
ggtitle("Trip by Bases") +
scale_y_continuous(labels = comma)
ggplot(Data, aes(Base)) +
geom_bar(fill = "#d55534") +
ggtitle("Trip by Bases") +
scale_y_continuous(labels = comma)
?geom_bar()
ggplot(Data, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
ggtitle("Trips by Base and Month")
scale_y_continuous(labels = comma)
day_and_hour <- Data %>%
group_by(day, hour) %>%
summarise(Total = n())
ggplot(Data, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
ggtitle("Trips by Base and Month")
scale_y_continuous(labels = comma)
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "white") +
ggtitle("Heat map by hour and day")
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "black") +
ggtitle("Heat map by hour and day")
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "blue") +
ggtitle("Heat map by hour and day")
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "white") +
ggtitle("Heat map by hour and day")
day_and_hour <- Data %>%
group_by(day, hour) %>%
dplyr::summarize(Total = n())
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "white") +
ggtitle("Heat map by hour and day")
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "red") +
ggtitle("Heat map by hour and day")
ggplot(day_and_hour, aes(day, hour, fill = Total)) +
geom_tile(col = "white") +
ggtitle("Heat map by hour and day")
summary(Data$Lat, Data$Lon)
summary(Data$Lat)
summary(Data$Lon)
min_latitude <- 39.66
max_latitude <- 42.12
min_longitude <- -74.93
min_latitude <- 39.66
max_latitude <- 42.12
min_longitude <- -74.93
max_longitude <- -72.07
ggplot(Data, aes(x = Lon, y = Lat, col = Base)) +
geom_point(size=1) +
scale_x_continuous(limits = c(min_longitude, max_longitude)) +
scale_y_continuous(limits = c(min_latitude, max_latitude)) +
theme_map() +
ggtitle("Delhi - Latitude & Longitude")
